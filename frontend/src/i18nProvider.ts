//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    users: {
      name: 'Users',
      fields: {
        name: 'Name',
        email: 'Email',
        password: 'Password',
        phoneNumber: 'Phone Number',
        id: 'id',
      },
    },
    transactions: {
      name: 'Transactions',
      fields: {
        amount: 'Amount',
        currency: 'Currency',
        senderId: 'Sender Id',
        receiverId: 'Receiver Id',
        transactionDate: 'Transaction Date',
        id: 'id',
      },
    },
    accounts: {
      name: 'Accounts',
      fields: {
        accountNumber: 'Account Number',
        userId: 'User Id',
        balance: 'Balance',
        currency: 'Currency',
        id: 'id',
      },
    },
    currencies: {
      name: 'Currencies',
      fields: {
        currencyCode: 'Currency Code',
        name: 'Name',
        exchangeRate: 'Exchange Rate',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    users: {
      name: 'Users (fr)',
      fields: {
        name: 'Name (fr)',
        email: 'Email (fr)',
        password: 'Password (fr)',
        phoneNumber: 'Phone Number (fr)',
        id: 'id',
      },
    },
    transactions: {
      name: 'Transactions (fr)',
      fields: {
        amount: 'Amount (fr)',
        currency: 'Currency (fr)',
        senderId: 'Sender Id (fr)',
        receiverId: 'Receiver Id (fr)',
        transactionDate: 'Transaction Date (fr)',
        id: 'id',
      },
    },
    accounts: {
      name: 'Accounts (fr)',
      fields: {
        accountNumber: 'Account Number (fr)',
        userId: 'User Id (fr)',
        balance: 'Balance (fr)',
        currency: 'Currency (fr)',
        id: 'id',
      },
    },
    currencies: {
      name: 'Currencies (fr)',
      fields: {
        currencyCode: 'Currency Code (fr)',
        name: 'Name (fr)',
        exchangeRate: 'Exchange Rate (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
